name: Create and publish image
permissions:
  contents: read         # Needed to check out the repository
  packages: write        # Needed to push images to GitHub Container Registry (ghcr.io)

on:
  push:
    branches: [ master ]
    tags:
    - "v*.*.*"

jobs:
  build-and-push:
    name: Build and push image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write  # For generating attestations
      id-token: write      # For OIDC token authentication
    if: github.event_name != 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true
          cache-dependency-path: go.sum

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Set Docker metadata
        id: metadata
        uses: docker/metadata-action@v5
        with:
          images: docker.io/${{ github.repository_owner }}/instance-manager,ghcr.io/${{ github.repository_owner }}/instance-manager
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
          labels: |
            org.opencontainers.image.description=A Kubernetes controller for creating and managing worker node instance groups across multiple providers
            org.opencontainers.image.licenses=Apache-2.0
            org.opencontainers.image.source=https://github.com/keikoproj/instance-manager
            org.opencontainers.image.url=https://github.com/keikoproj/instance-manager/blob/master/README.md
            org.opencontainers.image.vendor=keikoproj
            org.opencontainers.image.authors=Keikoproj Contributors
            org.opencontainers.image.title=Instance Manager

      - name: Build and push cross-platform image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          provenance: false
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          annotations: |
            org.opencontainers.image.description=A Kubernetes controller for creating and managing worker node instance groups across multiple providers
            org.opencontainers.image.licenses=Apache-2.0
            org.opencontainers.image.source=https://github.com/keikoproj/instance-manager
            org.opencontainers.image.url=https://github.com/keikoproj/instance-manager/blob/master/README.md
            org.opencontainers.image.vendor=keikoproj
            org.opencontainers.image.authors=Keikoproj Contributors
            org.opencontainers.image.created=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
            org.opencontainers.image.version=${{ github.ref_name }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.title=Instance Manager
          build-args: |
            CREATED=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
            VERSION=${{ github.ref_name }}
            REVISION=${{ github.sha }}

      - name: Generate artifact attestation (dockerhub)
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: docker.io/${{ github.repository_owner }}/instance-manager
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

      - name: Generate artifact attestation (ghcr)
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ghcr.io/${{ github.repository_owner }}/instance-manager
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
